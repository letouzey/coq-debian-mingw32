#!/bin/sh

## Checking debian installation

DEPS="liblablgtk2-ocaml-dev camlp5 mingw32-ocaml mingw32-gtk2 mingw32-camlp5 mingw32-lablgtk2 nsis wget unzip"

if dpkg -l $DEPS > /dev/null; then
 echo "Debian packages correctly installed. Good!"
else
 echo "Some debian package are missing. Please install them first. "
 echo "For the unofficial ones, see http://git.debian.org/~glondu/mingw32/"
 exit 1
fi

## For including a make.exe in the coq package, we fetch it if it isn't here

./fetch_make.sh || exit 1

## We read $VERSION in configure

VERSION=`egrep -m1 "^VERSION=" coq-src/configure | cut -c9-`

echo Building Coq $VERSION

## Now the configure script starts using ocamlfind

export OCAMLFIND_CONF=/etc/i586-mingw32msvc-ocamlfind.conf

## first a build for the cross-compiled binaries
## then a usual local build (for the theories)
## and finally we build the windows installer

HERE=$PWD
cd coq-src && make clean && \
./configure -prefix "" -arch win32 && ./build win32 && \
find _build -name \*.native -exec i586-mingw32msvc-strip {} \; && \
rm -f bin/* && \
./configure -local -opt --with-doc no -coqide no && \
make -j4 coqlib && \
cd $HERE && makensis -DVERSION=$VERSION coq.nsi
